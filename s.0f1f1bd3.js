var app=function(){"use strict";function n(){}function s(n,s){for(const a in s)n[a]=s[a];return n}function a(n){return n()}function t(){return Object.create(null)}function e(n){n.forEach(a)}function p(n){return"function"==typeof n}function o(n,s){return n!=n?s==s:n!==s}function c(s,...a){if(null==s)return n;const t=s.subscribe(...a);return t.unsubscribe?()=>t.unsubscribe():t}function l(n,a,t,e){return n[1]&&e?s(t.ctx.slice(),n[1](e(a))):t.ctx}function u(n,s,a,t,e,p,o){const c=function(n,s,a,t){if(n[2]&&t){const e=n[2](t(a));if(void 0===s.dirty)return e;if("object"==typeof e){const n=[],a=Math.max(s.dirty.length,e.length);for(let t=0;t<a;t+=1)n[t]=s.dirty[t]|e[t];return n}return s.dirty|e}return s.dirty}(s,t,e,p);if(c){const e=l(s,a,t,o);n.p(e,c)}}function i(n){const s={};for(const a in n)"$"!==a[0]&&(s[a]=n[a]);return s}function r(n,s){const a={};s=new Set(s);for(const t in n)s.has(t)||"$"===t[0]||(a[t]=n[t]);return a}function k(n,s){n.appendChild(s)}function d(n,s,a){n.insertBefore(s,a||null)}function g(n){n.parentNode.removeChild(n)}function f(n){return document.createElement(n)}function $(n){return document.createTextNode(n)}function m(){return $(" ")}function h(n,s,a,t){return n.addEventListener(s,a,t),()=>n.removeEventListener(s,a,t)}function v(n,s,a){null==a?n.removeAttribute(s):n.getAttribute(s)!==a&&n.setAttribute(s,a)}function y(n,s){const a=Object.getOwnPropertyDescriptors(n.__proto__);for(const t in s)null==s[t]?n.removeAttribute(t):"style"===t?n.style.cssText=s[t]:"__value"===t?n.value=n[t]=s[t]:a[t]&&a[t].set?n[t]=s[t]:v(n,t,s[t])}function x(n,s){s=""+s,n.wholeText!==s&&(n.data=s)}function b(n,s,a){n.classList[a?"add":"remove"](s)}let w;function I(n){w=n}function P(){if(!w)throw new Error("Function called outside component initialization");return w}function C(){const n=P();return(s,a)=>{const t=n.$$.callbacks[s];if(t){const e=function(n,s){const a=document.createEvent("CustomEvent");return a.initCustomEvent(n,!1,!1,s),a}(s,a);t.slice().forEach((s=>{s.call(n,e)}))}}}function T(n,s){const a=n.$$.callbacks[s.type];a&&a.slice().forEach((n=>n(s)))}const L=[],j=[],M=[],S=[],H=Promise.resolve();let E=!1;function _(n){M.push(n)}function N(n){S.push(n)}let O=!1;const F=new Set;function A(){if(!O){O=!0;do{for(let n=0;n<L.length;n+=1){const s=L[n];I(s),q(s.$$)}for(I(null),L.length=0;j.length;)j.pop()();for(let n=0;n<M.length;n+=1){const s=M[n];F.has(s)||(F.add(s),s())}M.length=0}while(L.length);for(;S.length;)S.pop()();E=!1,O=!1,F.clear()}}function q(n){if(null!==n.fragment){n.update(),e(n.before_update);const s=n.dirty;n.dirty=[-1],n.fragment&&n.fragment.p(n.ctx,s),n.after_update.forEach(_)}}const J=new Set;function B(n,s){n&&n.i&&(J.delete(n),n.i(s))}function z(n,s,a,t){if(n&&n.o){if(J.has(n))return;J.add(n),undefined.c.push((()=>{J.delete(n),t&&(a&&n.d(1),t())})),n.o(s)}}function R(n,s){const a={},t={},e={$$scope:1};let p=n.length;for(;p--;){const o=n[p],c=s[p];if(c){for(const n in o)n in c||(t[n]=1);for(const n in c)e[n]||(a[n]=c[n],e[n]=1);n[p]=c}else for(const n in o)e[n]=1}for(const n in t)n in a||(a[n]=void 0);return a}function D(n,s,a){const t=n.$$.props[s];void 0!==t&&(n.$$.bound[t]=a,a(n.$$.ctx[t]))}function V(n){n&&n.c()}function G(n,s,t){const{fragment:o,on_mount:c,on_destroy:l,after_update:u}=n.$$;o&&o.m(s,t),_((()=>{const s=c.map(a).filter(p);l?l.push(...s):e(s),n.$$.on_mount=[]})),u.forEach(_)}function Q(n,s){const a=n.$$;null!==a.fragment&&(e(a.on_destroy),a.fragment&&a.fragment.d(s),a.on_destroy=a.fragment=null,a.ctx=[])}function U(n,s){-1===n.$$.dirty[0]&&(L.push(n),E||(E=!0,H.then(A)),n.$$.dirty.fill(0)),n.$$.dirty[s/31|0]|=1<<s%31}function K(s,a,p,o,c,l,u=[-1]){const i=w;I(s);const r=a.props||{},k=s.$$={fragment:null,ctx:null,props:l,update:n,not_equal:c,bound:t(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(i?i.$$.context:[]),callbacks:t(),dirty:u,skip_bound:!1};let d=!1;if(k.ctx=p?p(s,r,((n,a,...t)=>{const e=t.length?t[0]:a;return k.ctx&&c(k.ctx[n],k.ctx[n]=e)&&(!k.skip_bound&&k.bound[n]&&k.bound[n](e),d&&U(s,n)),a})):[],k.update(),d=!0,e(k.before_update),k.fragment=!!o&&o(k.ctx),a.target){if(a.hydrate){const n=function(n){return Array.from(n.childNodes)}(a.target);k.fragment&&k.fragment.l(n),n.forEach(g)}else k.fragment&&k.fragment.c();a.intro&&B(s.$$.fragment),G(s,a.target,a.anchor),A()}I(i)}class W{$destroy(){Q(this,1),this.$destroy=n}$on(n,s){const a=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return a.push(s),()=>{const n=a.indexOf(s);-1!==n&&a.splice(n,1)}}$set(n){var s;this.$$set&&(s=n,0!==Object.keys(s).length)&&(this.$$.skip_bound=!0,this.$$set(n),this.$$.skip_bound=!1)}}const X=[];function Y(s,a=n){let t;const e=[];function p(n){if(p=n,((a=s)!=a?p==p:a!==p||a&&"object"==typeof a||"function"==typeof a)&&(s=n,t)){const n=!X.length;for(let n=0;n<e.length;n+=1){const a=e[n];a[1](),X.push(a,s)}if(n){for(let n=0;n<X.length;n+=2)X[n][0](X[n+1]);X.length=0}}var a,p}return{set:p,update:function(n){p(n(s))},subscribe:function(o,c=n){const l=[o,c];return e.push(l),1===e.length&&(t=a(p)||n),o(s),()=>{const n=e.indexOf(l);-1!==n&&e.splice(n,1),0===e.length&&(t(),t=null)}}}}function Z(s,a,t){const o=!Array.isArray(s),l=o?[s]:s,u=a.length<2;return{subscribe:Y(t,(s=>{let t=!1;const i=[];let r=0,k=n;const d=()=>{if(r)return;k();const t=a(o?i[0]:i,s);u?s(t):k=p(t)?t:n},g=l.map(((n,s)=>c(n,(n=>{i[s]=n,r&=~(1<<s),t&&d()}),(()=>{r|=1<<s}))));return t=!0,d(),function(){e(g),k()}})).subscribe}}function nn(n){let a,t;const e=n[9].default,p=function(n,s,a,t){if(n){const e=l(n,s,a,t);return n[0](e)}}(e,n,n[8],null);let o=[{"data-pincode":""},n[2]],c={};for(let n=0;n<o.length;n+=1)c=s(c,o[n]);return{c(){a=f("div"),p&&p.c(),y(a,c),b(a,"svelte-sp9tzb",!0)},m(s,e){d(s,a,e),p&&p.m(a,null),n[10](a),t=!0},p(n,[s]){p&&p.p&&256&s&&u(p,e,n,n[8],s,null,null),y(a,c=R(o,[{"data-pincode":""},4&s&&n[2]])),b(a,"svelte-sp9tzb",!0)},i(n){t||(B(p,n),t=!0)},o(n){z(p,n),t=!1},d(s){s&&g(a),p&&p.d(s),n[10](null)}}}function sn(n,a,t){const e=["code","value","focusFirstInput","focusNextEmptyInput","focusLastInput"];let p,o=r(a,e),{$$slots:l={},$$scope:u}=a,{code:k=[]}=a,{value:d=""}=a;const g=C(),f=Y([]);var $,m;$=f,m=n=>t(11,p=n),n.$$.on_destroy.push(c($,m));const h=Z(f,(n=>n.reduce(((n,s)=>({...n,[s.id]:s.value})),{})));let v=null;function y(){t(3,k=p.map((n=>n.value||"")))}var x,b;return x="Pincode",b={_valuesById:h,add:(n,s)=>{let a=[...k];f.update((t=>(void 0===k[t.length]?a[t.length]=s:a[t.length]=a[t.length]||s,[...t,{id:n,value:k[t.length]||s}]))),t(3,k=a)},remove:n=>{f.update((s=>s.filter((s=>s.id!==n)))),y()},update:(n,s)=>{const a=p.map((n=>n.id)).indexOf(n);f.update((n=>n.map(((n,t)=>t===a?{...n,value:s}:n)))),y();const t=v.querySelectorAll("input")[a+1];t&&t.focus(),k.filter(Boolean).length===p.length&&g("complete",{code:k,value:s})},clear:n=>{const s=p.map((n=>n.id)).indexOf(n);if(!p[s].value){const n=v.querySelectorAll("input")[s-1];n&&(n.focus(),n.select())}f.update((n=>n.map(((n,a)=>a===s?{...n,value:""}:n)))),y()}},P().$$.context.set(x,b),n.$$set=n=>{a=s(s({},a),i(n)),t(2,o=r(a,e)),"code"in n&&t(3,k=n.code),"value"in n&&t(4,d=n.value),"$$scope"in n&&t(8,u=n.$$scope)},n.$$.update=()=>{8&n.$$.dirty&&t(4,d=k.join("")),8&n.$$.dirty&&k&&f.update((n=>n.map(((n,s)=>({...n,value:k[s]}))))),8&n.$$.dirty&&0===k.length&&f.update((n=>n.map((n=>({...n,value:""})))))},[v,f,o,k,d,()=>{v.querySelector("input").focus()},()=>{for(const n of v.querySelectorAll("input"))if(0===n.value.length){n.focus();break}},()=>{v.querySelector("input:last-of-type").focus()},u,l,function(n){j[n?"unshift":"push"]((()=>{v=n,t(0,v)}))}]}class an extends W{constructor(n){var s;super(),document.getElementById("svelte-sp9tzb-style")||((s=f("style")).id="svelte-sp9tzb-style",s.textContent="[data-pincode].svelte-sp9tzb{display:inline-flex;border:1px solid #e0e0e0}",k(document.head,s)),K(this,n,sn,nn,o,{code:3,value:4,focusFirstInput:5,focusNextEmptyInput:6,focusLastInput:7})}get focusFirstInput(){return this.$$.ctx[5]}get focusNextEmptyInput(){return this.$$.ctx[6]}get focusLastInput(){return this.$$.ctx[7]}}function tn(a){let t,p,o,c,l=[a[4],{type:"text"},{inputmode:"numeric"},{pattern:p="[0-9]1"},{maxlength:"1"},{value:a[0]}],u={};for(let n=0;n<l.length;n+=1)u=s(u,l[n]);return{c(){t=f("input"),y(t,u),b(t,"svelte-1cexha",!0)},m(n,s){d(n,t,s),t.value=u.value,a[9](t),o||(c=[h(t,"focus",a[5]),h(t,"blur",a[6]),h(t,"input",a[7]),h(t,"input",a[10]),h(t,"keydown",a[8]),h(t,"keydown",a[11])],o=!0)},p(n,[s]){y(t,u=R(l,[16&s&&n[4],{type:"text"},{inputmode:"numeric"},{pattern:"[0-9]1"},{maxlength:"1"},1&s&&t.value!==n[0]&&{value:n[0]}])),"value"in u&&(t.value=u.value),b(t,"svelte-1cexha",!0)},i:n,o:n,d(n){n&&g(t),a[9](null),o=!1,e(c)}}}function en(n,a,t){const e=["value","id","ref"];let p=r(a,e),{value:o=""}=a,{id:c="input"+Math.random().toString(36)}=a,{ref:l=null}=a;const u=(k="Pincode",P().$$.context.get(k));var k;let d;var g;g=()=>(u.add(c,o),d=u._valuesById.subscribe((n=>{t(0,o=n[c]||"")})),()=>{u.remove(c),d()}),P().$$.on_mount.push(g);return n.$$set=n=>{a=s(s({},a),i(n)),t(4,p=r(a,e)),"value"in n&&t(0,o=n.value),"id"in n&&t(2,c=n.id),"ref"in n&&t(1,l=n.ref)},[o,l,c,u,p,function(s){T(n,s)},function(s){T(n,s)},function(s){T(n,s)},function(s){T(n,s)},function(n){j[n?"unshift":"push"]((()=>{l=n,t(1,l)}))},n=>{u.update(c,n.target.value)},n=>{"Backspace"===n.key&&(n.preventDefault(),u.clear(c))}]}class pn extends W{constructor(n){var s;super(),document.getElementById("svelte-1cexha-style")||((s=f("style")).id="svelte-1cexha-style",s.textContent="input.svelte-1cexha{width:3rem;padding:0.5rem 1rem;margin:0;border:0;border-radius:0;text-align:center}input.svelte-1cexha:focus{z-index:1}input.svelte-1cexha:not(:last-of-type){border-right:1px solid #e0e0e0}",k(document.head,s)),K(this,n,en,tn,o,{value:0,id:2,ref:1})}}function on(n){let s,a,t,e,p,o,c,l;return s=new pn({}),t=new pn({}),p=new pn({}),c=new pn({}),{c(){V(s.$$.fragment),a=m(),V(t.$$.fragment),e=m(),V(p.$$.fragment),o=m(),V(c.$$.fragment)},m(n,u){G(s,n,u),d(n,a,u),G(t,n,u),d(n,e,u),G(p,n,u),d(n,o,u),G(c,n,u),l=!0},i(n){l||(B(s.$$.fragment,n),B(t.$$.fragment,n),B(p.$$.fragment,n),B(c.$$.fragment,n),l=!0)},o(n){z(s.$$.fragment,n),z(t.$$.fragment,n),z(p.$$.fragment,n),z(c.$$.fragment,n),l=!1},d(n){Q(s,n),n&&g(a),Q(t,n),n&&g(e),Q(p,n),n&&g(o),Q(c,n)}}}function cn(s){let a,t,e,p,o,c,l,u;return a=new pn({}),e=new pn({props:{value:"2"}}),o=new pn({}),l=new pn({}),{c(){V(a.$$.fragment),t=m(),V(e.$$.fragment),p=m(),V(o.$$.fragment),c=m(),V(l.$$.fragment)},m(n,s){G(a,n,s),d(n,t,s),G(e,n,s),d(n,p,s),G(o,n,s),d(n,c,s),G(l,n,s),u=!0},p:n,i(n){u||(B(a.$$.fragment,n),B(e.$$.fragment,n),B(o.$$.fragment,n),B(l.$$.fragment,n),u=!0)},o(n){z(a.$$.fragment,n),z(e.$$.fragment,n),z(o.$$.fragment,n),z(l.$$.fragment,n),u=!1},d(n){Q(a,n),n&&g(t),Q(e,n),n&&g(p),Q(o,n),n&&g(c),Q(l,n)}}}function ln(n){let s,a,t,e,p,o,c,l;return s=new pn({}),t=new pn({}),p=new pn({}),c=new pn({}),{c(){V(s.$$.fragment),a=m(),V(t.$$.fragment),e=m(),V(p.$$.fragment),o=m(),V(c.$$.fragment)},m(n,u){G(s,n,u),d(n,a,u),G(t,n,u),d(n,e,u),G(p,n,u),d(n,o,u),G(c,n,u),l=!0},i(n){l||(B(s.$$.fragment,n),B(t.$$.fragment,n),B(p.$$.fragment,n),B(c.$$.fragment,n),l=!0)},o(n){z(s.$$.fragment,n),z(t.$$.fragment,n),z(p.$$.fragment,n),z(c.$$.fragment,n),l=!1},d(n){Q(s,n),n&&g(a),Q(t,n),n&&g(e),Q(p,n),n&&g(o),Q(c,n)}}}function un(n){let s,a,t,e=hn.length-n[0].length+"";return{c(){s=$("Enter "),a=$(e),t=$(" more digit(s)...")},m(n,e){d(n,s,e),d(n,a,e),d(n,t,e)},p(n,s){1&s&&e!==(e=hn.length-n[0].length+"")&&x(a,e)},d(n){n&&g(s),n&&g(a),n&&g(t)}}}function rn(n){let s;return{c(){s=$("Correct code!")},m(n,a){d(n,s,a)},d(n){n&&g(s)}}}function kn(n){let s;return{c(){s=$("Incorrect code.")},m(n,a){d(n,s,a)},d(n){n&&g(s)}}}function dn(n){let s,a,t,e,p,o,c,l;return s=new pn({}),t=new pn({}),p=new pn({}),c=new pn({}),{c(){V(s.$$.fragment),a=m(),V(t.$$.fragment),e=m(),V(p.$$.fragment),o=m(),V(c.$$.fragment)},m(n,u){G(s,n,u),d(n,a,u),G(t,n,u),d(n,e,u),G(p,n,u),d(n,o,u),G(c,n,u),l=!0},i(n){l||(B(s.$$.fragment,n),B(t.$$.fragment,n),B(p.$$.fragment,n),B(c.$$.fragment,n),l=!0)},o(n){z(s.$$.fragment,n),z(t.$$.fragment,n),z(p.$$.fragment,n),z(c.$$.fragment,n),l=!1},d(n){Q(s,n),n&&g(a),Q(t,n),n&&g(e),Q(p,n),n&&g(o),Q(c,n)}}}function gn(n){let s,a,t,e,p,o,c,l;return s=new pn({}),t=new pn({}),p=new pn({}),c=new pn({}),{c(){V(s.$$.fragment),a=m(),V(t.$$.fragment),e=m(),V(p.$$.fragment),o=m(),V(c.$$.fragment)},m(n,u){G(s,n,u),d(n,a,u),G(t,n,u),d(n,e,u),G(p,n,u),d(n,o,u),G(c,n,u),l=!0},i(n){l||(B(s.$$.fragment,n),B(t.$$.fragment,n),B(p.$$.fragment,n),B(c.$$.fragment,n),l=!0)},o(n){z(s.$$.fragment,n),z(t.$$.fragment,n),z(p.$$.fragment,n),z(c.$$.fragment,n),l=!1},d(n){Q(s,n),n&&g(a),Q(t,n),n&&g(e),Q(p,n),n&&g(o),Q(c,n)}}}function fn(n){let s,a,t,e,p,o,c,l;return s=new pn({}),t=new pn({}),p=new pn({}),c=new pn({}),{c(){V(s.$$.fragment),a=m(),V(t.$$.fragment),e=m(),V(p.$$.fragment),o=m(),V(c.$$.fragment)},m(n,u){G(s,n,u),d(n,a,u),G(t,n,u),d(n,e,u),G(p,n,u),d(n,o,u),G(c,n,u),l=!0},i(n){l||(B(s.$$.fragment,n),B(t.$$.fragment,n),B(p.$$.fragment,n),B(c.$$.fragment,n),l=!0)},o(n){z(s.$$.fragment,n),z(t.$$.fragment,n),z(p.$$.fragment,n),z(c.$$.fragment,n),l=!1},d(n){Q(s,n),n&&g(a),Q(t,n),n&&g(e),Q(p,n),n&&g(o),Q(c,n)}}}function $n(n){let s,a,t,e,p,o,c,l;return s=new pn({}),t=new pn({}),p=new pn({}),c=new pn({}),{c(){V(s.$$.fragment),a=m(),V(t.$$.fragment),e=m(),V(p.$$.fragment),o=m(),V(c.$$.fragment)},m(n,u){G(s,n,u),d(n,a,u),G(t,n,u),d(n,e,u),G(p,n,u),d(n,o,u),G(c,n,u),l=!0},i(n){l||(B(s.$$.fragment,n),B(t.$$.fragment,n),B(p.$$.fragment,n),B(c.$$.fragment,n),l=!0)},o(n){z(s.$$.fragment,n),z(t.$$.fragment,n),z(p.$$.fragment,n),z(c.$$.fragment,n),l=!1},d(n){Q(s,n),n&&g(a),Q(t,n),n&&g(e),Q(p,n),n&&g(o),Q(c,n)}}}function mn(n){let s,a,t,o,c,l,u,i,r,y,w,I,P,C,T,L,M,S,H,E,_,O,F,A,q,J,R,U,K,W,X,Y,Z,nn,sn,tn,en,pn,mn,hn,vn,yn,xn,bn,wn,In,Pn,Cn,Tn,Ln,jn,Mn,Sn,Hn,En,_n,Nn,On,Fn,An,qn,Jn,Bn,zn,Rn,Dn,Vn,Gn,Qn,Un,Kn,Wn,Xn,Yn,Zn,ns,ss,as,ts,es,ps,os,cs,ls,us,is,rs,ks,ds,gs,fs,$s,ms,hs,vs,ys,xs,bs,ws,Is,Ps,Cs,Ts,Ls,js,Ms,Ss,Hs,Es,_s,Ns,Os,Fs,As,qs,Js,Bs,zs,Rs,Ds,Vs,Gs,Qs,Us,Ks,Ws,Xs,Ys,Zs,na,sa,aa,ta,ea,pa,oa,ca,la,ua,ia,ra,ka,da,ga,fa,$a,ma,ha,va,ya,xa,ba,wa,Ia,Pa,Ca,Ta,La,ja,Ma,Sa,Ha,Ea,_a,Na,Oa,Fa,Aa,qa,Ja,Ba=JSON.stringify(n[3])+"",za=JSON.stringify(n[4])+"",Ra=JSON.stringify(n[5])+"",Da=JSON.stringify(n[6])+"";function Va(s){n[11].call(null,s)}function Ga(s){n[12].call(null,s)}let Qa={$$slots:{default:[on]},$$scope:{ctx:n}};function Ua(s){n[13].call(null,s)}void 0!==n[3]&&(Qa.code=n[3]),void 0!==n[4]&&(Qa.value=n[4]),J=new an({props:Qa}),j.push((()=>D(J,"code",Va))),j.push((()=>D(J,"value",Ga)));let Ka={$$slots:{default:[cn]},$$scope:{ctx:n}};function Wa(s){n[14].call(null,s)}void 0!==n[5]&&(Ka.code=n[5]),In=new an({props:Ka}),j.push((()=>D(In,"code",Ua)));let Xa={$$slots:{default:[ln]},$$scope:{ctx:n}};void 0!==n[0]&&(Xa.value=n[0]),Jn=new an({props:Xa}),j.push((()=>D(Jn,"value",Wa)));let Ya=!n[1]&&un(n),Za=n[2]&&rn(),nt=n[10]&&kn();function st(s){n[15].call(null,s)}let at={$$slots:{default:[dn]},$$scope:{ctx:n}};return void 0!==n[6]&&(at.code=n[6]),as=new an({props:at}),j.push((()=>D(as,"code",st))),ys=new an({props:{$$slots:{default:[gn]},$$scope:{ctx:n}}}),n[18](ys),Hs=new an({props:{code:["9","9"],$$slots:{default:[fn]},$$scope:{ctx:n}}}),n[19](Hs),Ds=new an({props:{$$slots:{default:[$n]},$$scope:{ctx:n}}}),n[20](Ds),{c(){s=f("main"),a=f("h1"),a.textContent="svelte-pincode",t=m(),o=f("p"),o.innerHTML='<a href="https://npmjs.com/package/svelte-pincode"><img src="https://img.shields.io/npm/v/svelte-pincode.svg?style=for-the-badge&amp;color=%23ff3e00" alt="NPM"/></a>',c=m(),l=f("blockquote"),l.innerHTML="<p>Pincode component for Svelte.</p>",u=m(),i=f("p"),i.innerHTML='Try it in the <a href="https://svelte.dev/repl/2841eef46bfb49c4a848a2a063602e5d?version=3.31.0">Svelte REPL</a>.',r=m(),y=f("p"),y.innerHTML="<strong>Table of Contents</strong>",w=f("ul"),w.innerHTML='<li><a href="#quick-start">Quick Start</a></li> \n<li><a href="#usage">Usage</a></li> \n<ul><li><a href="#basic">Basic</a></li> \n<li><a href="#initial-values">Initial values</a></li> \n<li><a href="#completion-%26-error-states">Completion &amp; error states</a></li> \n<li><a href="#programmatic-usage">Programmatic usage</a></li> \n<li><a href="#focus-first-input">Focus first input</a></li> \n<li><a href="#focus-next-empty-input">Focus next empty input</a></li> \n<li><a href="#focus-last-input">Focus last input</a></li> \n</ul><li><a href="#styling">Styling</a></li> \n<li><a href="#api">API</a></li> \n<ul><li><a href="#pincode">Pincode</a></li> \n<li><a href="#pincodeinput">PincodeInput</a></li> \n</ul><li><a href="#typescript">TypeScript</a></li> \n<li><a href="#changelog">Changelog</a></li> \n<li><a href="#license">License</a></li>',I=m(),P=f("h2"),P.textContent="Quick Start",C=m(),T=f("pre"),L=m(),M=f("h2"),M.textContent="Usage",S=m(),H=f("h3"),H.textContent="Basic",E=m(),_=f("p"),_.innerHTML="Bind to either the <code>code</code> or <code>value</code> prop.",O=m(),F=f("ul"),F.innerHTML="<li><strong><code>code</code></strong> (<code>string[]</code>): Array of input values. An empty string represents an undefined value.</li> \n<li><strong><code>value</code></strong> (<code>string</code>): The <code>code</code> props as a string (i.e., <code>code.join(&#39;&#39;)</code>)</li>",A=m(),q=f("div"),V(J.$$.fragment),K=m(),W=f("div"),X=$("code: "),Y=f("code"),Z=$(Ba),nn=m(),sn=f("div"),tn=$("value: "),en=f("code"),pn=$(za),mn=f("pre"),hn=m(),vn=f("h3"),vn.textContent="Initial values",yn=m(),xn=f("p"),xn.innerHTML="Define intitial input values by using the <code>code</code> prop or <code>value</code> prop on <code>PincodeInput</code>.",bn=m(),wn=f("div"),V(In.$$.fragment),Cn=m(),Tn=f("div"),Ln=$("code: "),jn=f("code"),Mn=$(Ra),Sn=f("pre"),Hn=m(),En=f("h3"),En.textContent="Completion & error states",_n=m(),Nn=f("p"),Nn.textContent="This example illustrates how you can validate the code once all inputs have a value.",On=m(),Fn=f("p"),Fn.innerHTML="<code>value</code> is simply the <code>code</code> array joined as a string.",An=m(),qn=f("div"),V(Jn.$$.fragment),zn=m(),Rn=f("div"),Ya&&Ya.c(),Dn=m(),Za&&Za.c(),Vn=m(),nt&&nt.c(),Gn=m(),Qn=f("pre"),Un=m(),Kn=f("h3"),Kn.textContent="Programmatic usage",Wn=m(),Xn=f("p"),Xn.innerHTML="<code>code</code> can be set programmatically.",Yn=m(),Zn=f("p"),Zn.textContent="Type in some initial values and then try setting or clearing the code using the buttons.",ns=m(),ss=f("div"),V(as.$$.fragment),es=m(),ps=f("div"),os=$("code: "),cs=f("code"),ls=$(Da),us=m(),is=f("button"),is.textContent="Set code",rs=m(),ks=f("button"),ks.textContent="Clear code\n",ds=f("pre"),gs=m(),fs=f("h3"),fs.textContent="Focus first input",$s=m(),ms=f("p"),ms.innerHTML="To programmatically focus the first input, invoke the <code>focusFirstInput</code> method on a component reference.",hs=m(),vs=f("div"),V(ys.$$.fragment),xs=m(),bs=f("br"),ws=m(),Is=f("button"),Is.textContent="Focus first input\n",Ps=f("pre"),Cs=m(),Ts=f("h3"),Ts.textContent="Focus next empty input",Ls=m(),js=f("p"),js.innerHTML="To focus the next input with no value, invoke the <code>focusNextEmptyInput</code> method.",Ms=m(),Ss=f("div"),V(Hs.$$.fragment),Es=m(),_s=f("br"),Ns=m(),Os=f("button"),Os.textContent="Focus next empty input\n",Fs=f("pre"),As=m(),qs=f("h3"),qs.textContent="Focus last input",Js=m(),Bs=f("p"),Bs.innerHTML="To focus the last input, invoke the <code>focusLastInput</code> method.",zs=m(),Rs=f("div"),V(Ds.$$.fragment),Vs=m(),Gs=f("br"),Qs=m(),Us=f("button"),Us.textContent="Focus last input\n",Ks=f("pre"),Ws=m(),Xs=f("h2"),Xs.textContent="Styling",Ys=m(),Zs=f("p"),Zs.textContent="This component is minimally styled.",na=m(),sa=f("p"),sa.textContent="Default styles:",aa=m(),ta=f("pre"),ea=m(),pa=f("h2"),pa.textContent="API",oa=m(),ca=f("h3"),ca.textContent="Pincode",la=m(),ua=f("h4"),ua.textContent="Props",ia=m(),ra=f("table"),ra.innerHTML='<thead><tr><th style="text-align:left">Prop name</th> \n<th style="text-align:left">Value</th></tr></thead> \n<tbody><tr><td style="text-align:left">code</td> \n<td style="text-align:left"><code>string[]</code> (default: <code>[]</code>)</td></tr> \n<tr><td style="text-align:left">value</td> \n<td style="text-align:left"><code>string</code> (default: <code>&quot;&quot;</code>)</td></tr></tbody>',ka=m(),da=f("h4"),da.textContent="Dispatched Events",ga=m(),fa=f("ul"),fa.innerHTML="<li>on:complete: fired when all inputs have a value</li>",$a=m(),ma=f("pre"),ha=m(),va=f("h3"),va.textContent="PincodeInput",ya=m(),xa=f("table"),xa.innerHTML='<thead><tr><th style="text-align:left">Prop name</th> \n<th style="text-align:left">Value</th></tr></thead> \n<tbody><tr><td style="text-align:left">id</td> \n<td style="text-align:left"><code>string</code> (default: <code>&quot;input&quot; + Math.random().toString(36)</code>)</td></tr> \n<tr><td style="text-align:left">ref</td> \n<td style="text-align:left"><code>HTMLInputElement</code> (default: <code>null</code>)</td></tr></tbody>',ba=m(),wa=f("h4"),wa.textContent="Forwarded Events",Ia=m(),Pa=f("ul"),Pa.innerHTML="<li>on:focus</li> \n<li>on:blur</li> \n<li>on:input</li> \n<li>on:keydown</li>",Ca=m(),Ta=f("h2"),Ta.textContent="TypeScript",La=m(),ja=f("p"),ja.innerHTML="To use this component with TypeScript, you will need <code>svelte</code> version 3.31 or greater.",Ma=m(),Sa=f("h2"),Sa.textContent="Changelog",Ha=m(),Ea=f("p"),Ea.innerHTML='<a href="https://github.com/metonym/svelte-pincode/tree/master/CHANGELOG.md">CHANGELOG.md</a>',_a=m(),Na=f("h2"),Na.textContent="License",Oa=m(),Fa=f("p"),Fa.innerHTML='<a href="https://github.com/metonym/svelte-pincode/tree/master/LICENSE">MIT</a>',v(a,"id","svelte-pincode"),v(P,"id","quick-start"),v(T,"class","language-bash"),v(M,"id","usage"),v(H,"id","basic"),v(q,"class","code-fence"),v(mn,"class","language-svelte"),v(mn,"data-svelte",""),v(vn,"id","initial-values"),v(wn,"class","code-fence"),v(Sn,"class","language-svelte"),v(Sn,"data-svelte",""),v(En,"id","completion-%26-error-states"),b(Rn,"complete",n[1]),b(Rn,"success",n[2]),b(Rn,"error",n[10]),v(qn,"class","code-fence"),v(Qn,"class","language-svelte"),v(Qn,"data-svelte",""),v(Kn,"id","programmatic-usage"),v(is,"type","button"),v(ks,"type","button"),v(ss,"class","code-fence"),v(ds,"class","language-svelte"),v(ds,"data-svelte",""),v(fs,"id","focus-first-input"),v(Is,"type","button"),v(vs,"class","code-fence"),v(Ps,"class","language-svelte"),v(Ps,"data-svelte",""),v(Ts,"id","focus-next-empty-input"),v(Os,"type","button"),v(Ss,"class","code-fence"),v(Fs,"class","language-svelte"),v(Fs,"data-svelte",""),v(qs,"id","focus-last-input"),v(Us,"type","button"),v(Rs,"class","code-fence"),v(Ks,"class","language-svelte"),v(Ks,"data-svelte",""),v(Xs,"id","styling"),v(ta,"class","language-css"),v(pa,"id","api"),v(ca,"id","pincode"),v(ua,"id","props"),v(da,"id","dispatched-events"),v(ma,"class","language-html"),v(va,"id","pincodeinput"),v(wa,"id","forwarded-events"),v(Ta,"id","typescript"),v(Sa,"id","changelog"),v(Na,"id","license"),v(s,"class","markdown-body")},m(e,g){d(e,s,g),k(s,a),k(s,t),k(s,o),k(s,c),k(s,l),k(s,u),k(s,i),k(s,r),k(s,y),k(s,w),k(s,I),k(s,P),k(s,C),k(s,T),T.innerHTML='<span class="token function">yarn</span> <span class="token function">add</span> -D svelte-pincode\n<span class="token comment"># OR</span>\n<span class="token function">npm</span> i -D svelte-pincode\n',k(s,L),k(s,M),k(s,S),k(s,H),k(s,E),k(s,_),k(s,O),k(s,F),k(s,A),k(s,q),G(J,q,null),k(q,K),k(q,W),k(W,X),k(W,Y),k(Y,Z),k(q,nn),k(q,sn),k(sn,tn),k(sn,en),k(en,pn),k(s,mn),mn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> Pincode<span class="token punctuation">,</span> PincodeInput <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"svelte-pincode"</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pincode</span> <span class="token attr-name"><span class="token namespace">bind:</span>code</span> <span class="token attr-name"><span class="token namespace">bind:</span>value</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pincode</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>code: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>value: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',k(s,hn),k(s,vn),k(s,yn),k(s,xn),k(s,bn),k(s,wn),G(In,wn,null),k(wn,Cn),k(wn,Tn),k(Tn,Ln),k(Tn,jn),k(jn,Mn),k(s,Sn),Sn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">let</span> pincode <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pincode</span> <span class="token attr-name"><span class="token namespace">bind:</span>code=</span><span class="token language-javascript"><span class="token punctuation">{</span>pincode<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pincode</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>code: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>pincode<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',k(s,Hn),k(s,En),k(s,_n),k(s,Nn),k(s,On),k(s,Fn),k(s,An),k(s,qn),G(Jn,qn,null),k(qn,zn),k(qn,Rn),Ya&&Ya.m(Rn,null),k(Rn,Dn),Za&&Za.m(Rn,null),k(Rn,Vn),nt&&nt.m(Rn,null),k(Rn,Gn),k(s,Qn),Qn.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">const</span> correctCode <span class="token operator">=</span> <span class="token string">"1234"</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> inputValue <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>\n\n  $<span class="token operator">:</span> complete <span class="token operator">=</span> inputValue<span class="token punctuation">.</span>length <span class="token operator">===</span> correctCode<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n  $<span class="token operator">:</span> success <span class="token operator">=</span> complete <span class="token operator">&amp;&amp;</span> inputValue <span class="token operator">===</span> correctCode<span class="token punctuation">;</span>\n  $<span class="token operator">:</span> error <span class="token operator">=</span> complete <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>success<span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pincode</span> <span class="token attr-name"><span class="token namespace">bind:</span>value=</span><span class="token language-javascript"><span class="token punctuation">{</span>inputValue<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pincode</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">class:</span>complete</span> <span class="token attr-name"><span class="token namespace">class:</span>success</span> <span class="token attr-name"><span class="token namespace">class:</span>error</span><span class="token punctuation">></span></span>\n  <span class="token language-javascript"><span class="token punctuation">{</span>#<span class="token keyword">if</span> <span class="token operator">!</span>complete<span class="token punctuation">}</span></span>\n    Enter\n    <span class="token language-javascript"><span class="token punctuation">{</span>correctCode<span class="token punctuation">.</span>length <span class="token operator">-</span> inputValue<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span>\n    more digit(s)...\n  <span class="token language-javascript"><span class="token punctuation">{</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">}</span></span>\n  <span class="token language-javascript"><span class="token punctuation">{</span>#<span class="token keyword">if</span> success<span class="token punctuation">}</span></span>Correct code!<span class="token language-javascript"><span class="token punctuation">{</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">}</span></span>\n  <span class="token language-javascript"><span class="token punctuation">{</span>#<span class="token keyword">if</span> error<span class="token punctuation">}</span></span>Incorrect code.<span class="token language-javascript"><span class="token punctuation">{</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">}</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n',k(s,Un),k(s,Kn),k(s,Wn),k(s,Xn),k(s,Yn),k(s,Zn),k(s,ns),k(s,ss),G(as,ss,null),k(ss,es),k(ss,ps),k(ps,os),k(ps,cs),k(cs,ls),k(ss,us),k(ss,is),k(ss,rs),k(ss,ks),k(s,ds),ds.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">let</span> passcode <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pincode</span> <span class="token attr-name"><span class="token namespace">bind:</span>code=</span><span class="token language-javascript"><span class="token punctuation">{</span>passcode<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pincode</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>code: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>passcode<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>passcode <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'1\'</span><span class="token punctuation">,</span> <span class="token string">\'2\'</span><span class="token punctuation">,</span> <span class="token string">\'3\'</span><span class="token punctuation">,</span> <span class="token string">\'4\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  Set code\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>passcode <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'\'</span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  Clear code\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n',k(s,gs),k(s,fs),k(s,$s),k(s,ms),k(s,hs),k(s,vs),G(ys,vs,null),k(vs,xs),k(vs,bs),k(vs,ws),k(vs,Is),k(s,Ps),Ps.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">let</span> ref<span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pincode</span> <span class="token attr-name"><span class="token namespace">bind:</span>this=</span><span class="token language-javascript"><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pincode</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>ref<span class="token punctuation">.</span>focusFirstInput<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  Focus first input\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n',k(s,Cs),k(s,Ts),k(s,Ls),k(s,js),k(s,Ms),k(s,Ss),G(Hs,Ss,null),k(Ss,Es),k(Ss,_s),k(Ss,Ns),k(Ss,Os),k(s,Fs),Fs.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">let</span> pincodeRef<span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pincode</span> <span class="token attr-name">code=</span><span class="token language-javascript"><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token string">\'9\'</span><span class="token punctuation">,</span> <span class="token string">\'9\'</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>this=</span><span class="token language-javascript"><span class="token punctuation">{</span>pincodeRef<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pincode</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>pincodeRef<span class="token punctuation">.</span>focusNextEmptyInput<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  Focus next empty input\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n',k(s,As),k(s,qs),k(s,Js),k(s,Bs),k(s,zs),k(s,Rs),G(Ds,Rs,null),k(Rs,Vs),k(Rs,Gs),k(Rs,Qs),k(Rs,Us),k(s,Ks),Ks.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">let</span> passcodeRef<span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pincode</span> <span class="token attr-name"><span class="token namespace">bind:</span>this=</span><span class="token language-javascript"><span class="token punctuation">{</span>passcodeRef<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PincodeInput</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Pincode</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">{</span>passcodeRef<span class="token punctuation">.</span>focusLastInput<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  Focus last input\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n',k(s,Ws),k(s,Xs),k(s,Ys),k(s,Zs),k(s,na),k(s,sa),k(s,aa),k(s,ta),ta.innerHTML='<span class="token comment">/** Pincode **/</span>\n<span class="token selector">[data-pincode]</span> <span class="token punctuation">{</span>\n  <span class="token property">display</span><span class="token punctuation">:</span> inline-flex<span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e0e0e0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/** PincodeInput */</span>\n<span class="token selector">input</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 3rem<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 0.5rem 1rem<span class="token punctuation">;</span>\n  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">input:focus</span> <span class="token punctuation">{</span>\n  <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">input:not(:last-of-type)</span> <span class="token punctuation">{</span>\n  <span class="token property">border-right</span><span class="token punctuation">:</span> 1px solid #e0e0e0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n',k(s,ea),k(s,pa),k(s,oa),k(s,ca),k(s,la),k(s,ua),k(s,ia),k(s,ra),k(s,ka),k(s,da),k(s,ga),k(s,fa),k(s,$a),k(s,ma),ma.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pincode</span>\n  <span class="token attr-name"><span class="token namespace">on:</span>complete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{(e) => {\n    console.log(e.detail); // { code: string[]; value: string; }\n  }}<span class="token punctuation">"</span></span>\n<span class="token punctuation">/></span></span>\n',k(s,ha),k(s,va),k(s,ya),k(s,xa),k(s,ba),k(s,wa),k(s,Ia),k(s,Pa),k(s,Ca),k(s,Ta),k(s,La),k(s,ja),k(s,Ma),k(s,Sa),k(s,Ha),k(s,Ea),k(s,_a),k(s,Na),k(s,Oa),k(s,Fa),Aa=!0,qa||(Ja=[h(is,"click",n[16]),h(ks,"click",n[17]),h(Is,"click",(function(){p(n[7].focusFirstInput)&&n[7].focusFirstInput.apply(this,arguments)})),h(Os,"click",(function(){p(n[8].focusNextEmptyInput)&&n[8].focusNextEmptyInput.apply(this,arguments)})),h(Us,"click",(function(){p(n[9].focusLastInput)&&n[9].focusLastInput.apply(this,arguments)}))],qa=!0)},p(s,[a]){n=s;const t={};2097152&a&&(t.$$scope={dirty:a,ctx:n}),!R&&8&a&&(R=!0,t.code=n[3],N((()=>R=!1))),!U&&16&a&&(U=!0,t.value=n[4],N((()=>U=!1))),J.$set(t),(!Aa||8&a)&&Ba!==(Ba=JSON.stringify(n[3])+"")&&x(Z,Ba),(!Aa||16&a)&&za!==(za=JSON.stringify(n[4])+"")&&x(pn,za);const e={};2097152&a&&(e.$$scope={dirty:a,ctx:n}),!Pn&&32&a&&(Pn=!0,e.code=n[5],N((()=>Pn=!1))),In.$set(e),(!Aa||32&a)&&Ra!==(Ra=JSON.stringify(n[5])+"")&&x(Mn,Ra);const p={};2097152&a&&(p.$$scope={dirty:a,ctx:n}),!Bn&&1&a&&(Bn=!0,p.value=n[0],N((()=>Bn=!1))),Jn.$set(p),n[1]?Ya&&(Ya.d(1),Ya=null):Ya?Ya.p(n,a):(Ya=un(n),Ya.c(),Ya.m(Rn,Dn)),n[2]?Za||(Za=rn(),Za.c(),Za.m(Rn,Vn)):Za&&(Za.d(1),Za=null),n[10]?nt||(nt=kn(),nt.c(),nt.m(Rn,Gn)):nt&&(nt.d(1),nt=null),2&a&&b(Rn,"complete",n[1]),4&a&&b(Rn,"success",n[2]),1024&a&&b(Rn,"error",n[10]);const o={};2097152&a&&(o.$$scope={dirty:a,ctx:n}),!ts&&64&a&&(ts=!0,o.code=n[6],N((()=>ts=!1))),as.$set(o),(!Aa||64&a)&&Da!==(Da=JSON.stringify(n[6])+"")&&x(ls,Da);const c={};2097152&a&&(c.$$scope={dirty:a,ctx:n}),ys.$set(c);const l={};2097152&a&&(l.$$scope={dirty:a,ctx:n}),Hs.$set(l);const u={};2097152&a&&(u.$$scope={dirty:a,ctx:n}),Ds.$set(u)},i(n){Aa||(B(J.$$.fragment,n),B(In.$$.fragment,n),B(Jn.$$.fragment,n),B(as.$$.fragment,n),B(ys.$$.fragment,n),B(Hs.$$.fragment,n),B(Ds.$$.fragment,n),Aa=!0)},o(n){z(J.$$.fragment,n),z(In.$$.fragment,n),z(Jn.$$.fragment,n),z(as.$$.fragment,n),z(ys.$$.fragment,n),z(Hs.$$.fragment,n),z(Ds.$$.fragment,n),Aa=!1},d(a){a&&g(s),Q(J),Q(In),Q(Jn),Ya&&Ya.d(),Za&&Za.d(),nt&&nt.d(),Q(as),n[18](null),Q(ys),n[19](null),Q(Hs),n[20](null),Q(Ds),qa=!1,e(Ja)}}}const hn="1234";function vn(n,s,a){let t,e,p,o=[],c="",l=["1","","3"],u="",i=[];let r,k,d;return n.$$.update=()=>{1&n.$$.dirty&&a(1,r=u.length===hn.length),3&n.$$.dirty&&a(2,k=r&&u===hn),6&n.$$.dirty&&a(10,d=r&&!k)},[u,r,k,o,c,l,i,t,e,p,d,function(n){o=n,a(3,o)},function(n){c=n,a(4,c)},function(n){l=n,a(5,l)},function(n){u=n,a(0,u)},function(n){i=n,a(6,i)},()=>a(6,i=["1","2","3","4"]),()=>a(6,i=["","","",""]),function(n){j[n?"unshift":"push"]((()=>{t=n,a(7,t)}))},function(n){j[n?"unshift":"push"]((()=>{e=n,a(8,e)}))},function(n){j[n?"unshift":"push"]((()=>{p=n,a(9,p)}))}]}return new class extends W{constructor(n){super(),K(this,n,vn,mn,o,{})}}({target:document.body})}();
